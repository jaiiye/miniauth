<?xml version="1.0"?>
<project name="MiniAuthJars" basedir="../.." default="all">
    <property name="libDir" value="nomaven/lib"/>
    <property name="classesDir" value="nomaven/build/classes"/>
    <property name="apidocDir" value="nomaven/build/apidoc"/>
    <property name="output" value="nomaven/build/jar"/>
    <property name="version" value="0.9.1"/>

    <!--  Install these libraries under nomaven/lib (which is not in git repo)  -->
    <property name="httpClientDir" value="nomaven/lib/httpcomponents-client-4.3.1"/>
    <property name="gaeSdkDir" value="nomaven/lib/appengine-java-sdk-1.8.6"/>

	<property environment="myenv" />
	<path id="tomcat.runtime.lib">
	    <fileset dir="${myenv.CATALINA_HOME}/lib">
	        <include name="*.jar"/>
	    </fileset>
	</path>
	<path id="apache.httpclient.lib">
	    <fileset dir="${httpClientDir}/lib">
	        <include name="*.jar"/>
	    </fileset>
	</path>
	<path id="google.gaesdk.lib">
        <fileset dir ="${gaeSdkDir}/lib/user">
            <include name="**/appengine-api-1.0-sdk*.jar" />
        </fileset>
        <fileset dir="${gaeSdkDir}/lib/opt/user">
          <include name="appengine-api-labs/v1/*.jar" />
          <include name="appengine-endpoints/v1/*.jar" />
          <include name="jsr107/v1/*.jar" />
        </fileset>
	</path>


	<target name="cleanCoreClasses">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/core">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
	<target name="cleanOAuthClasses">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/oauth">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
	<target name="cleanOAuth2Classes">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/oauth2">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
	<target name="cleanWebClasses">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/web">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
	<target name="cleanGAEClasses">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/gae">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
	<target name="cleanAllClasses" depends="cleanCoreClasses, cleanOAuthClasses, cleanOAuth2Classes, cleanWebClasses, cleanGAEClasses">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/all">
	            <include name="**" />
			</fileset>
		</delete>
    </target>

    <target name="createOutputDir">
        <mkdir dir="${classesDir}/core"/>
        <mkdir dir="${classesDir}/oauth"/>
        <mkdir dir="${classesDir}/oauth2"/>
        <mkdir dir="${classesDir}/web"/>
        <mkdir dir="${classesDir}/gae"/>
        <mkdir dir="${output}"/>
    </target>

	<target name="buildCoreClasses" depends="cleanCoreClasses, createOutputDir">
        <javac srcdir="miniauth-core/src/main/java"
                 destdir="${classesDir}/core"
                 debug="on"
                 source="1.7"
                 includeantruntime="false"
        />
    </target>
	<target name="buildOAuthClasses" depends="cleanOAuthClasses, createOutputDir">
        <javac srcdir="miniauth-oauth/src/main/java"
                 classpath="${classesDir}/core"
                 destdir="${classesDir}/oauth"
                 debug="on"
                 source="1.7"
                 includeantruntime="false"
        />
    </target>
	<target name="buildOAuth2Classes" depends="cleanOAuth2Classes, createOutputDir">
        <javac srcdir="miniauth-oauth2/src/main/java"
                 classpath="${classesDir}/core"
                 destdir="${classesDir}/oauth2"
                 debug="on"
                 source="1.7"
                 includeantruntime="false"
        />
    </target>
	<target name="buildWebClasses" depends="cleanWebClasses, createOutputDir">
        <javac srcdir="miniauth-web/src/main/java"
                 classpath="${classesDir}/core;${classesDir}/oauth"
                 destdir="${classesDir}/web"
                 debug="on"
                 source="1.7"
                 includeantruntime="false">
        	<classpath refid="tomcat.runtime.lib"/>
<!--
        	<classpath refid="apache.httpclient.lib"/>
-->
        </javac>
    </target>
	<target name="buildGAEClasses" depends="cleanGAEClasses, createOutputDir">
        <javac srcdir="miniauth-gae/src/main/java"
                 classpath="${classesDir}/core;${classesDir}/oauth"
                 destdir="${classesDir}/gae"
                 debug="on"
                 source="1.7"
                 includeantruntime="false">
<!--
        	<classpath refid="google.gaesdk.lib"/>
-->
        </javac>
    </target>
	<target name="buildAllClasses" depends="cleanAllClasses, buildCoreClasses, buildOAuthClasses, buildOAuth2Classes, buildWebClasses, buildGAEClasses">
    </target>


	<target name="createCoreJar" depends="buildCoreClasses">
        <jar destfile="${output}/miniauth-core-${version}.jar"
             basedir="${classesDir}/core"
             includes="org/miniauth/**"
        />
    </target>
    <target name="createOAuthJar" depends="buildOAuthClasses">
        <jar destfile="${output}/miniauth-oauth-${version}.jar"
             basedir="${classesDir}/oauth"
             includes="org/miniauth/oauth/**"
        />
    </target>
    <target name="createOAuth2Jar" depends="buildOAuth2Classes">
        <jar destfile="${output}/miniauth-oauth2-${version}.jar"
             basedir="${classesDir}/oauth2"
             includes="org/miniauth/oauth2/**"
        />
    </target>
    <target name="createWebJar" depends="buildWebClasses">
        <jar destfile="${output}/miniauth-web-${version}.jar"
             basedir="${classesDir}/web"
             includes="org/miniauth/web/**"
        />
    </target>
    <target name="createGAEJar" depends="buildGAEClasses">
        <jar destfile="${output}/miniauth-gae-${version}.jar"
             basedir="${classesDir}/gae"
             includes="org/miniauth/gae/**"
        />
    </target>

    
	<target name="cleanAllClassesDir">
        <delete failonerror="false">
		    <fileset dir ="${classesDir}/all">
	            <include name="**" />
			</fileset>
		</delete>
    </target>
    <target name="createAllClassesDir">
        <mkdir dir="${classesDir}/all"/>
    </target>
	<target name="copyAllClasses" depends="cleanAllClassesDir, createAllClassesDir, buildAllClasses">
        <copy todir="${classesDir}/all" overwrite="true" flatten="false">
		    <fileset dir ="${classesDir}/core">
	            <include name="org/miniauth/**" />
			</fileset>
		    <fileset dir ="${classesDir}/oauth">
	            <include name="org/miniauth/oauth/**" />
			</fileset>
		    <fileset dir ="${classesDir}/oauth2">
	            <include name="org/miniauth/oauth2/**" />
			</fileset>
        	<fileset dir ="${classesDir}/web">
	            <include name="org/miniauth/web/**" />
			</fileset>
        	<fileset dir ="${classesDir}/gae">
	            <include name="org/miniauth/gae/**" />
			</fileset>
		</copy>
    </target>
    <target name="createAllJar" depends="copyAllClasses, createOutputDir">
        <jar destfile="${output}/miniauth-all-${version}.jar"
             basedir="${classesDir}/all"
             includes="org/miniauth/**"
        />
    </target>

	<target name="exportAllJars" depends="createCoreJar, createOAuthJar, createOAuth2Jar, createWebJar, createGAEJar, createAllJar">

	</target>

	<target name="cleanApidocDir">
        <delete failonerror="false">
		    <fileset dir ="${apidocDir}">
	            <include name="**" />
			</fileset>
		</delete>
    </target>

    <target name="createApidocDir">
        <mkdir dir="${apidocDir}"/>
    </target>

	<target name="apidoc" depends="createAllJar, cleanApidocDir, createApidocDir" description="Generate javadoc for all modules">
	    <javadoc destdir="${apidocDir}">
        	<classpath refid="tomcat.runtime.lib"/>
<!--
        	<classpath refid="apache.httpclient.lib"/>
        	<classpath refid="google.gaesdk.lib"/>
-->
    	    <packageset dir="miniauth-core/src/main/java" defaultexcludes="yes">
    	      <include name="org/miniauth/**"/>
    	    </packageset>
    	    <packageset dir="miniauth-oauth/src/main/java" defaultexcludes="yes">
    	      <include name="org/miniauth/oauth/**"/>
    	    </packageset>
    	    <packageset dir="miniauth-oauth2/src/main/java" defaultexcludes="yes">
    	      <include name="org/miniauth/oauth2/**"/>
    	    </packageset>
    	    <packageset dir="miniauth-web/src/main/java" defaultexcludes="yes">
    	      <include name="org/miniauth/web/**"/>
     	    </packageset>
    	    <packageset dir="miniauth-gae/src/main/java" defaultexcludes="yes">
    	      <include name="org/miniauth/gae/**"/>
     	    </packageset>
	        <doctitle><![CDATA[<h1>MiniAuth OAuth Library</h1>]]></doctitle>
	        <bottom><![CDATA[<i>Copyright &#169; 2013 Harry Y. All Rights Reserved.</i>]]></bottom>
	    </javadoc>
	</target>
	<target name="createApiDocJar" depends="apidoc">
        <jar destfile="${output}/miniauth-all-${version}-javadoc.jar"
             basedir="${apidocDir}"
             includes="**"
        />
    </target>

    <target name="clean" depends="cleanAllClasses, createAllClassesDir, cleanApidocDir" />

    <target name="all" depends="exportAllJars, createApiDocJar" />
</project>
